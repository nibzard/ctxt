version: '3.8'

services:
  postgresql:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ctxt_help
      POSTGRES_USER: ctxt_user
      POSTGRES_PASSWORD: ctxt_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ctxt_user -d ctxt_help"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://ctxt_user:ctxt_password@postgresql:5432/ctxt_help
      REDIS_URL: redis://redis:6379
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-please-set-jwt-secret-key-in-env}
      DEBUG: "true"
      LOG_LEVEL: debug
    volumes:
      - ./backend:/app
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      API_BASE_URL: http://backend:8000
      PORT: 3001
      NODE_ENV: development
    volumes:
      - ./mcp-server:/app
      - /app/node_modules
    depends_on:
      - backend
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
  redis_data: